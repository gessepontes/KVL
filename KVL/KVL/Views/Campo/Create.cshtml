@model KVL.Models.Campo

@{
    ViewBag.Title = "Novo campo";
}

<section class="content-header">
    <h1>
        Novo Campo
        <small>Preview</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#">Cadastro</a></li>
        <li class="active">Campo</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <!-- left column -->
        <div class="col-md-12">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Campo</h3>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.sNome, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.sNome, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.sNome, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.sEndereco, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.sEndereco, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.sEndereco, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.mValor, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.mValor, new { htmlAttributes = new { @class = "form-control", style = "width:100px" } })
                                    @Html.ValidationMessageFor(model => model.mValor, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.mValorMensal, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.mValorMensal, new { htmlAttributes = new { @class = "form-control", style = "width:100px" } })
                                    @Html.ValidationMessageFor(model => model.mValorMensal, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="box-footer">
                                <input type="submit" value="Salvar" class="btn btn-primary" />
                                <button type="button" class="btn btn-default"  onclick="location.href='@Url.Action("Index", "Campo")'">Voltar</button>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/validations_pt-br")
}
